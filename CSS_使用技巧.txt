


|=========================================================================================================|
|																										  |
|																										  |
|																										  |
|																										  |
|===================================CSS  布局、定义样式、常用的一些属性===================================|
|																										  |
|																										  |
|																										  |
|																										  |
|=========================================================================================================|


//============== CSS书写顺序 ==============
1.位置属性(position, top, right, z-index,display, float等)　　
2.大小(width, height, padding, margin)　　
3.文字系列(font, line-height, letter-spacing,color- text-align等)　　
4.背景(background, border等)　　
5.其他(animation, transition等)




//============== clear:both 清除浮动 ==============
footer{
	float:left;
	clear:both;
}
/* 参考网址： */
http://www.w3school.com.cn/tiy/t.asp?f=csse_class-clear



//============== 表格边框合并 ==============
table
{
	border-collapse: collapse;
}
  
  
  
//============== 定义伪类(:hover 表示鼠标浮动属性)	改变背景透明度  背景阴影效果
img{
	opacity:1.0;
	filter:alpha(opacity=100); /* For IE8 and earlier */
}
img:hover {
	opacity:0.8;				
	filter:alpha(opacity=80); /* For IE8 and earlier */
	box-shadow: 2px 2px 1px #888888;	/*背景阴影*/
}



//==============不使用代理==============
var myImage = (function() {
    var imgNode = document.createElement("img");
    document.body.appendChild(imgNode);
    var img = new Image();

    img.onload = function() {
        imgNode.src = img.src;
    };

    return {
        setSrc: function(src) {
            imgNode.src = "./images/loading.gif";
            img.src = src;
        }
    }
})();

myImage.setSrc("./images/originImg.png");




//============== 图片预加载--使用代理的方式==============
// 创建图片DOM
var myImage = (function() {
    var imgNode = document.createElement("img");
    document.body.appendChild(imgNode);

    return {
        setSrc: function(src) {
            imgNode.src = src;
        }
    };
})();

// 代理
var proxyImage = (function() {
    var img = new Image();

    img.onload = function() {
        myImage.setSrc(this.src);   // this指向img！img加载完成后，将img.src传递给myImage
    };

    return {
        setSrc: function(src) {
            myImage.setSrc("./images/loading.gif");     // loading
            img.src = src;
        }
    };
})();

proxyImage.setSrc("./images/originImg.png");





//==============背景图片自动填充(cover)==============
body{
	background: url("images/img/background.png");
	background-repeat: no-repeat;
	background-size: cover; 
	-moz-background-size: cover; 
}
	
/* 项目菜单实例 */
{
	background-image: url("../../../images/homePage/DHXLBJ2.png");
	background-position: 100% 100%;		
	background-repeat:no-repeat;
	background-size: cover; 
	-moz-background-size: cover;
}
	
	
	
//============== 背景图片居中显示 ==============
.logoPanel{
	width:650px;
    height: 170px;
    margin-top: 100px;
    margin-left:auto;
    margin-right:auto;
}




//============== 区块 垂直 水平 居中(子容器在父容器中水平垂直居中) ==============
参考：	https://www.w3cplus.com/css/centering-css-complete-guide.html
1、父容器添加属性
.parent{
	positon:relative;
	
	// 0.5 模糊问题
	-webkit-transform-style: preserve-3d; 
	-moz-transform-style: preserve-3d; 
	transform-style: preserve-3d;

}
2、子容器添加属性
.child{		
	width: ;				/*定义控件的长度*/
	height: ;				/*定义控件的高度*/
	position:absolute;				/*与父容器属性对应*/
	left: 50%;						/*自己理解去吧.0_0.*/
	top: 50%;
	transform: translate(-50%, -50%);
}




//============== 另一种未知高度居中 ==============
.parent { 
	display: flex; 
	justify-content: center; 
	align-items: center; 
}


	

//==============网上找到 关于 table 布局的另一种方式==============
/*设置查询条件CSS*/
.searchDiv{display: table; table-layout: fixed; width: 100%;}
.searchDiv .colDiv{display: table-cell; padding-left: 10px;}

/*对应的HTML*/
<div class="searchDiv">
	<div class="colDiv"></div>
	<div class="colDiv" ></div>
	<div class="colDiv"></div>
	<div class="colDiv"></div>
</div>	
	
	

//==============设置边框==============
border:1px solid #3a87ad;




//==============设置图片 在平面浮动==============
#float-hint{
    position: fixed;
    right: 10px;
    bottom: 20px;
    z-index: 2000000000;
    border-radius: 2px;
}

//================panel、table的圆角属性==============
.panel{
	border-radius:4px;
}

//================变小手属性==================
cursor:pointer;				//变小手属性
cursor:hand;				//但是只有 IE 上能显示



//==============设置图片、区域在页面的相对位置==============
#float-man{
    position: absolute;
    right: 517px;
    top: 355px;
    height: 140px;
    width: 70px;
}




//==============设置图片、区块居中==============
.center
{
	margin:auto;
	width:70%;
	background-color:#b0e0e6;
}



//==============设置文字垂直居中==============
p{
	display: table-cell;
    vertical-align: middle;
}


//==============完整的css引用 .==============
/* 必须包含的两个属性：href="" , rel="stylesheet" */
<link href="../resources/css/online-consulting.css" rel="stylesheet">


	
//============== C3 实现页面动画效果==============
.className{
	width:0px;
	-webkit-transition: width .5s;
    -moz-transition: width .5s;
    -ms-transition: width .5s;
    -o-transition: width .5s;
    transition: width .5s;
}
.className:hover{
	width:100px;
	-webkit-transition: width .5s;
    -moz-transition: width .5s;
    -ms-transition: width .5s;
    -o-transition: width .5s;
    transition: width .5s;
}



//==============JS方法 实现css3动画效果==============
$('.className').css{
	"width":'10px',
	"transition":'width .5s'
}


//============== C3 实现页面动画实践==============
/* 元素原有样式 */
header .head .banner .turnplate a.btn-label {
    display: block;
    width: 12.7%;
    height: 13.5%;
    position: absolute;
    left: 43.65%;
    top: 44%;
    background: url(../img/activity-label-click.png) no-repeat;
    background-size: 100%;
    background-position: center;
    animation: btnToBig 0.5s linear infinite alternate;
    -webkit-animation: btnToBig 0.5s linear infinite alternate;
} 
/* 元素动画效果 */ 
@keyframes btnToBig {
    from {
        width: 11.43%;
        height: 12.15%;
        position: absolute;
        left: 44.28%;
        top: 44%;
    }
    to {
        width: 12.7%;
        height: 13.5%;
        left: 43.65%;
        top: 44%;
    }
}
@-webkit-keyframes btnToBig{
    from {
        width: 11.43%;
        height: 12.15%;
        position: absolute;
        left: 44.28%;
        top: 44%;
    }
    to {
        width: 12.7%;
        height: 13.5%;
        left: 43.65%;
        top: 44%;
    }
}




//============== 设置半透明背景 ==============  
.floor-us .con li {
    position: relative;
    width: 230px;
    height: 308px;
    float: left;
    margin: 0 50px;
    overflow: hidden;
    background: rgba(255,255,255,.5);
}
//
.floor-us .con li img{
	height: 154px;
	display: block;
    opacity: 1;
    margin: 40px auto 50px;
    transition: margin 0.5s;
}
//添加css3 属性样式
.floor-us .con li:hover img{
	height: 154px;
	display: block;
	opacity: 1;
	margin: 0px auto 0px;
	transition: margin 0.5s;		//在0.5s内完成动画效果的转换
}
// 设置文本
.floor-us .con li p {
    height: 114px;
    position: relative;
    padding: 20px 18px;
    font-size: 16px;
    line-height: 30px;
    color: #666;
    background-color: #fff;
}



//============== css 的position 属性对应的功能 ==============
absolute	-> 	
				生成 绝 对定位的元素，相对于 static 定位以外的第一个父元素进行定位，
				元素位置通过 left top right bottom 属性进行规定
			<-
fixed		->	
				生成 绝 对定位的元素，相对于浏览器窗口进行定位
				元素位置通过 left top right bottom 属性进行规定
			<-
relative  	->  
				生成 相 对定位的元素，相对于其正常的位置进行定位
				left: 20 会向元素的 left 位置添加 20 像素
			<-	
static 		-> 	
				默认值。没有定位，元素出现在正常的流中 （忽略 top bottom left right 或 z-index 声明）
			<-
inherit		-> 	
				规定应该从父元素继承 position 属性的值
			<-




//============== css3 伪类::before (在字体前方加 |) ==============
.new_about_company .list_t::before {
    content: "";
    display: inline-block;
    width: 5px;
    height: 16px;
    margin-right: 15px;
    background-color: #d23030;
    position: relative;
    bottom: -3px;
}



//============== css 控制 一行显示所有文字，多出的文字 自动加 ... ==============
.li { 
	overflow:hidden;
	text-overflow:ellipsis; 
	-o-text-overflow:ellipsis;
	white-space:nowrap;
	width:100%;
}  




//============== css 控制行显示文字  自动 ... ==============
p{
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 1;	/*显示行数*/
    -webkit-box-orient: vertical;
}



//============== css 控制手机版 H5 不显示默认的选中框 ==============
*:focus {outline: none;}



//============== 各种箭头效果 ==============
/* 参考-后期整理 */
http://blog.csdn.net/tangtang5963/article/details/51490107
	
	
	
	
//============== 伪类实现 箭头 ============== 
.address-holder::after {
    content: '';
    width: 0;
    height: 0;
    border-left: 9px solid transparent;
    border-right: 9px solid transparent;
    border-bottom: 9px solid #fee;
    margin-top: -105px;
    float: right;
    margin-right: -1px;
}
.address-holder::before {
    content: '';
    display: inline-block;
    width: 0;
    height: 0;
    border-left: 8px solid transparent;
    border-right: 8px solid transparent;
    border-bottom: 8px solid #999;
    margin-top: -14px;
    float: right;
}	



//============== CSS 实现滚动 隐藏滚动条（主要隐藏PC滚动条） ============== 

/*************************** 原理 ***************************/
/*	如果要兼容 PC 其他浏览器（IE、Firefox 等），			*/
/*	在容器外面再嵌套一层 overflow:hidden 					*/
/*	内部内容再限制尺寸和外部嵌套层一样，就变相隐藏了。		*/
/*************************** 原理 ***************************/
/* html */
<div class="outer-wrap">
	<div class="inner-wrap">
		<div class="content">
			......
		</div>
	</div>
</div>
/* css */
.outer-wrap,
.content {
    width: 200px; 
	height: 200px;
}
.outer-wrap {
    position: relative;
    overflow: hidden;
}
.inner-wrap {
    position: absolute; 
	left: 0;
    overflow-x: hidden;
    overflow-y: scroll;
}
/* for Chrome */
.inner-wrap::-webkit-scrollbar {
    display: none;
}




//============== C3 实现浮动 图片放大效果 ==============
.pane-module .module-pic:hover img {
    transition: all .3s ease-out .1s;
    transform: matrix(1.05,0,0,1.05,0,0);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}




//============== 去除 H5页面 Input 选中后黄色边框 ==============
input{
	border: 0;
	outline: none;
}




//============== webkit-内核浏览器背景颜色渐变 ==============
div{
	background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(blue), color-stop(0.5, green), to(red));
}

border:1px transparent solid;
border-image:linear-gradient(to right,#000718,#23b7cb) 1 10;



//============== 关于钱的符号 ==============
	￥￥￥￥￥￥￥￥￥
	




//============== 设置placeholder样式兼容写法 ==============
.search_input::-webkit-input-placeholder {
    color: #bbbbbb;
}
.search_input:-moz-placeholder {
    color: #bbbbbb;
}
.search_input::-moz-placeholder {
    color: #bbbbbb;
}
.search_input:-ms-input-placeholder { 
    color: #bbbbbb;
}




//==============  媒体查询 ==============
@media screen and (min-width:600px) {
	element {
		/* >=600px 宽度设备样式设置 */
	}
}
@media screen and (max-width:599px) and (min-width:321px){
	element {
		/* >=321px && <600px 宽度设备样式设置 */
	}
}




//============== 设置0.5px 的边框 ==============
element::before{
	content: '';
	position: absolute;
	width: 100%;
	height: 100%;
	border: 1px solid red;
		
	-webkit-transform-origin: 0 0;
	-moz-transform-origin: 0 0;
	-ms-transform-origin: 0 0;
	-o-transform-origin: 0 0;
	transform-origin: 0 0;
		
	-webkit-transform: scale(0.5, 0.5);
	-ms-transform: scale(0.5, 0.5);
	-o-transform: scale(0.5, 0.5);
	transform: scale(0.5, 0.5);
		
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}





//==============  h5 页面<a>样式兼容性设置 ============== 
a {
	-webkit-tap-highlight-color: rgba(255, 255, 255, 0);
	-webkit-user-select: none;
	-moz-user-focus: none;
    -moz-user-select: none;
}

/* 长按出蓝色背景 */
a,a:hover,a:active,a:visited,a:link,a:focus{
    -webkit-tap-highlight-color:rgba(0,0,0,0);
    -webkit-tap-highlight-color: transparent;
    outline:none;
    background: none;
    text-decoration: none;
}

::selection { 
    background: #FFF; 
    color: #333; 
} 
::-moz-selection { 
    background: #FFF; 
    color: #333; 
} 
::-webkit-selection { 
    background: #FFF; 
    color: #333; 
}
img {
	-webkit-tap-highlight-color:rgba(0,0,0,0);
	-webkit-tap-highlight-color: rgba(255, 255, 255, 0);
	-webkit-user-select: none;
	-moz-user-focus: none;
	-moz-user-select: none;
	user-select: none;
}





//============== 页面字体兼容性设置 ============== 
font-family:"Microsoft YaHei",微软雅黑,"MicrosoftJhengHei",华文细黑,STHeiti,MingLiu




//==============  iphoneX 兼容性样式 三条 ============== 
/* iphone 滑动 滚动处理添加下面的 css 样式使滑动更圆滑 */ 
    
    -webkit-overflow-scrolling: touch;



/* iphoneX 兼容性--底部容易被顶高 */ 
.content {
	width: 100%;
	height: 100%;
}
.content iframe{
	width: 100%;
	height: 100%;										/* android 低版本无法读取 env(safe-area-inset-bottom) */
	height: calc(100% - env(safe-area-inset-bottom));	/* iphonex 兼容 */
}

/* 媒体查询 */
@media only screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3){ 
    body{
        padding-bottom: constant(safe-area-inset-bottom);
        padding-bottom: env(safe-area-inset-bottom);
    }
    .phonex-pb{
        padding-bottom: constant(safe-area-inset-bottom);
    }
    .iphonex-pt{
        padding-top: constant(safe-area-inset-top);
        padding-top: env(safe-area-inset-top);
    }
    .iphonex-pb{
        padding-bottom: constant(safe-area-inset-bottom);
        padding-bottom: env(safe-area-inset-bottom);
    }
    .iphonex-mt{
        margin-top: constant(safe-area-inset-top);
        margin-top: env(safe-area-inset-top);
    }
    .iphonex-mb{
        margin-bottom: constant(safe-area-inset-bottom);
        margin-bottom: env(safe-area-inset-bottom);
    }
    .iphonex-pl{
        padding-left: constant(safe-area-inset-left);
        padding-left: env(safe-area-inset-left);
    }
    .iphonex-pr{
        padding-right: constant(safe-area-inset-right);
        padding-right: env(safe-area-inset-right);
    }
    .iphonex-ml{
        margin-left: constant(safe-area-inset-left);
        margin-left: env(safe-area-inset-left);
    }
    .iphonex-mr{
        margin-right: constant(safe-area-inset-right);
        margin-right: env(safe-area-inset-right);
    }
    .iphonex-bd-top-bg{
        border-top: 88px solid transparent;
    }
    .iphonex-bd-top{
        border-top: 44px solid transparent;
    }
    .iphonex-bd-bottom{
        border-bottom: 34px solid transparent;
    }
}





//============== -CSS三原色-不刺眼取代色- ==============
	#red：		#ff0033;
	#green: 	#04b700;
	#blue: 		#488aff;
	
	

//====================== nth选择器 ======================
a: table第一列
	table tr td:first-child{
		width:15%;
	}
b：第N列
	table tr td:nth-child(2){
		width: 25%;
	}
	table tr td:nth-child(3){
		width: 10%;
	}
c: table 奇数行偶数行
	table tr:nth-child(odd)	{
		background-color: #f1f1f1;
	}
	table tr:nth-child(even) {
		background-color: #ffffff;
	}		


十二、表格设置合并边框模型(页面)：   
	table
	{
		border-collapse:collapse;
	}

	

// p a 标签换行
	world-break: break-all; // 或者其它参数
	
	

	
