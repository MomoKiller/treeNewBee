








// 窗口提示
 wx.showModal({

  title: '标题',

  content: '告知当前状态，信息和解决方法',

  confirmText: '主操作',

  cancelText: '次要操作',

  success: function(res) {

	if (res.confirm) {

	  console.log('用户点击主操作')

	} else if (res.cancel) {

	  console.log('用户点击次要操作')

	}

  }

})


// toast 提示
wx.showToast({ // 显示Toast

  title: '已发送',

  icon: 'success',

  duration: 1500

})



个人信息-微信登录
http://xmjs-apidev.tt.cn/index.do#/interface/detail?projectId=165413506455007012108&id=165449901760312012248
个人信息-修改个人资料
http://xmjs-apidev.tt.cn/index.do#/interface/detail?projectId=165413506455007012108&id=165449886819612012241
个人信息-查询个人资料
http://xmjs-apidev.tt.cn/index.do#/interface/detail?projectId=165413506455007012108&id=165449828887712012235
个人信息-我的列表
http://xmjs-apidev.tt.cn/index.do#/interface/detail?projectId=165413506455007012108&id=165449812687212012233

我的名片-名片列表
http://xmjs-apidev.tt.cn/index.do#/interface/detail?projectId=165413506455007012108&id=165450411278012012269
我的名片-解绑接口
http://xmjs-apidev.tt.cn/index.do#/interface/detail?projectId=165413506455007012108&id=165450407716212012268
我的名片-绑定接口
http://xmjs-apidev.tt.cn/index.do#/interface/detail?projectId=165413506455007012108&id=165450399221312012261





小程序APP ID：wx8f37edd4507b5cea
小程序秘钥：cd422ffc1a73752b849ac83af894f14d
秘钥和APP ID重置变更，麻烦研发知悉


测试环境地址：http://test-polymapi.duoduolvxing.cn/polym-tasks/
正式环境地址：http://polymapi.duoduolvxing.cn/polym-tasks/





// 复杂类型的 formData 类型数据封装
const formObj = {
    nameA: 'helle',
    nameb: [{
        childNameA: 'hello child',
        childNameB: {
            chchNameA: 'helle child child'
        },
        chileNameC: [{
            chchNameC: 'helle child child'
        },{
            chchNameD: 'helle child child'
        }],
		chileNameD: [1,2,3]
    }]
};


var formData = new FormData();

const getFormData = function(data, formData, pre) {

	if(Object.prototype.toString.call(data) === '[object String]'){
		const dataKeys = Object.keys(data);
		
	}
	
	if(Object.prototype.toString.call(data) === '[object Object]'){
		const dataKeys = Object.keys(data);
		for(let i=0, r=dataKeys.length; i<r; i++) {
			if(pre == ''){
				getFormData(data[dataKeys[i]], formData, `dataKeys[i]`);
			}else{
				getFormData(data[dataKeys[i]], formData, `${pre}[dataKeys[i]]`);
			}
		}
	}
	
	if(Object.prototype.toString.call(data) === '[object Array]'){
		for(let j=0,k=data.length; j<k; j++){
			if(pre == ''){
				getFormData(data[dataKeys[i]][j], formData, `dataKeys[i][j]`);
			}else{
				getFormData(data[dataKeys[i]][j], formData, `${pre}[dataKeys[i]][j]`);
			}
		}
	}

	const dataKeys = Object.keys(data);
	for(let i=0, r=dataKeys.length; i<r; i++) {
		// 普通字符串
		if(Object.prototype.toString.call(data[dataKeys[i]]) === '[object String]'){
			formData.append(`${pre}${dataKeys[i]}`, data[dataKeys[i]]);
		}
		// 对象类型
		if(Object.prototype.toString.call(data[dataKeys[i]]) === '[object Object]'){
			if(pre == ''){
				getFormData(data[dataKeys[i]], formData, `dataKeys[i]`);
			}else{
				getFormData(data[dataKeys[i]], formData, `${pre}[dataKeys[i]]`);
			}
		}
		// 数组类型
		if(Object.prototype.toString.call(data[dataKeys[i]]) === '[object Array]'){
			for(let j=0,k=data[dataKeys[i]].length; j<k; j++){
				if(Object.prototype.toString.call(data[dataKeys[i]][j]) === '[object Object]') {
					if(pre == ''){
						getFormData(data[dataKeys[i]][j], formData, `dataKeys[i][j]`);
					}else{
						getFormData(data[dataKeys[i]][j], formData, `${pre}[dataKeys[i]][j]`);
					}
				}
				if(Object.prototype.toString.call(data[dataKeys[i]][j]) === '[object String]') {
					getFormData(`${pre}[${data[dataKeys[i]][j]}]`, data[dataKeys[i]][j]);
				}
			}
		}
	}
	return formData;
}

getFormData(formObj, formData, '')



















